groups:
- name: all
  jobs:
  - deploy
  - init-vault
  - unseal-vault
- name: deploy
  jobs:
  - deploy
- name: init 
  jobs:
  - init-vault 
  - unseal-vault

resources:
- name: vault-release
  type: bosh-io-release
  check_every: 4h
  source:
    repository: cloudfoundry-community/vault-boshrelease
- name: consul-release
  type: bosh-io-release
  check_every: 4h
  source:
    repository: cloudfoundry-community/consul-boshrelease
- name: stemcell
  type: bosh-io-stemcell
  check_every: 4h
  source:
    force_regular: true
    name: {{stemcell-name}}
- name: concourse-deploy-vault
  type: git
  check_every: 4h
  source:
    uri: https://github.com/enaml-ops/concourse-deploy-vault
    branch: master
- name: omg-cli
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-cli
- name: omg-product-bundle
  type: github-release
  check_every: 4h
  source:
    user: enaml-ops
    repository: omg-product-bundle
- name: {{deployment-name}}
  type: bosh-deployment
  source:
    ca_cert: {{bosh-cacert}}
    client_id: {{bosh-client-id}}
    client_secret: {{bosh-client-secret}}
    deployment: {{deployment-name}} 
    target: {{bosh-url}}
  #- name: slack
  #  type: slack-notification
  #  source:
  #    url: {{slack-url}}

  #resource_types:
  #- name: slack-notification
  #  type: docker-image
  #  source:
  #    repository: cfcommunity/slack-notification-resource

jobs:
- name: init-vault
  plan: 
    - aggregate:
      - get: concourse-deploy-vault
        trigger: true
    - task: init-vault
      config: 
        inputs:
          - name: concourse-deploy-vault
        platform: linux
        image_resource: 
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-vault/ci/tasks/init-vault.sh
        params:
          VAULT_IP: {{vault-ip}}

- name: unseal-vault
  plan: 
    - aggregate:
      - get: concourse-deploy-vault
        trigger: true
    - task: init-vault
      config: 
        inputs:
          - name: concourse-deploy-vault
        platform: linux
        image_resource: 
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-vault/ci/tasks/unseal-vault.sh
        params:
          VAULT_IP: {{vault-ip}}
          VAULT_KEY_1: {{vault-key-1}}
          VAULT_KEY_2: {{vault-key-2}}
          VAULT_KEY_3: {{vault-key-3}}

- name: deploy
  plan:
    - aggregate:
      - get: vault-release
        trigger: true
      - get: consul-release
        trigger: true
      - get: stemcell
        trigger: true
      - get: concourse-deploy-vault
        trigger: true
      - get: omg-cli
        trigger: true
        params:
          globs:
          - omg-linux
      - get: omg-product-bundle
        trigger: true
        params:
          globs:
          - {{product-plugin}}
    - task: generate-manifest
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: virtmerlin/deploy-worker
        run:
          path: concourse-deploy-vault/ci/tasks/deploy-vault.sh 
        params:
          BOSH_CLIENT: {{bosh-client-id}}
          BOSH_CLIENT_SECRET: {{bosh-client-secret}}
          BOSH_CACERT: {{bosh-cacert}}
          BOSH_DOMAIN: {{bosh-url}}
          BOSH_USER: {{bosh-user}}
          BOSH_PASSWORD: {{bosh-pass}}
          PRODUCT_PLUGIN: {{product-plugin}}
          VAULT_IP: {{vault-ip}}
          STEMCELL_VERSION: {{stemcell-version}}
          STEMCELL_OS: {{stemcell-os}}
          NET_NAME: {{net-name}}
          AZ_NAME: {{az-name}}
          VM_SIZE: {{vm-size}}
          DISK_TYPE: {{disk-type}}
          OMG_PATH: "omg-cli/omg-linux"
        inputs:
        - name: vault-release
        - name: consul-release
        - name: stemcell
        - name: concourse-deploy-vault
        - name: omg-cli
        - name: omg-product-bundle
        outputs:
        - name: manifest
          path: ""
    - put: {{deployment-name}}
      params:
        manifest: manifest/deployment.yml
        stemcells:
        - stemcell/*.tgz
        releases:
        - vault-release/*.tgz
        - consul-release/*.tgz
      #on_success:
      #  put: slack
      #  params:
      #    text: |
      #      :white_check_mark: Successfully deployed {{deployment-name}} Vault 
      #      <https://$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      #    channel: {{slack-channel}}
      #    username: {{slack-username}}
      #    icon_url: {{slack-icon-url}}
      #on_failure:
      #  put: slack
      #  params:
      #    text: |
      #      :x: FAILED to deploy {{deployment-name}} Vault 
      #      <https://$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      #    channel: {{slack-channel}}
      #    username: {{slack-username}}
      #    icon_url: {{slack-icon-url}}
